1.리액트 사용 이유
- Component 기반 웹,앱 제작 // Module 기반 -
- Virtual DOM _ 가상돔 사용으로 효율적인 업데이트 // DOM_ javascript
-
2.JSX 문법 _ JavaScript XML 문법
- props = property 약어. _> 객체 ( Key, value ) 
(컴포넌트 간 데이터 자료를 주고받을 때, 함수의 인자 & 매개변수 )
- 함수형 컴포넌트 
- props Drilling _ 부작용 _> 해결방안 = Context  => useContext

-state = 상태 // 변수 
 -> 상태 업데이트 시켜 줘야하기에. react 는 "가상" DOM _> jsx문법에 따라 상태를

- setState( )=> state  // 비동기적 => 기다리지 않음. / / 동시 출발 


자바스크립트는 태생적으로 싱글 스레드 
> 비동기 불가능 //  setInterval setTime set... set함수를 사용하여 비동기 처리인것 처럼 실행의 순서를 제어함.

콜백함수 => 비동기처리!!
> 콜백 의미!!
>함수 제어 > "함수" 호출 타이밍

라우터!!!    > 수신과 송출을 동시에 하는 중계기 
페이지 라우터 => 페이지 분기.
구글 _> 리액트 라우터 돔 // React-router-dom

http://localhost:3000/post/1
http://localhost:3000/post/2

REST API
-> 클라이언트 <-> 서버       / 통신 방법
-> get // post 등등
->제품 (*페이지)를 제작한다고 할 때, 해당 페이지 안에 포함될 페이지들의 규칙성을 생성하고 제어 및 관리 할 수 있도록 만들어 놓은 시스템

and 단락 회로 평가!!!:

좌항값 && 우항값

or 단락회로평가 : 

좌항값 || 우항값


















