/*     		Flex 		*/

*CSS3 = 레벨로 업그레이드
 - animation / transition /transform
 - flex / grid
 > 기존 css로는 float / margin / padding /table => 레이아웃 정렬 / =>불편함
 > 레이아웃 정렬 전용 속성!!! 

align items _ contents 비교.


FLEX _ 조건.

1) 부모 (컨테이너 박스)
 > display : flex
 > justify-content => 중심축을 기준 정렬 : 수평정렬 .

(*단일 아이템!!
 - center : 아이템을 전체 너비의 정가운데
 - flex-start : 플렉스가 시작되어지는 지점을 기준으로 정렬
(*웹 모든 그래픽 요소 : 좌 => 우)
- flex - end : 우측정렬

(*복수 아이템!!!
 - space-between   _ 양끝을 맞추고 사이 컨텐츠 간격 정렬    |1===1===1|
 - space-around  _ 기본 간격을 정하고 이어붙임    |=1==1==1=|
 - space-evenly _ 모든 요소의 간격이 같음.    |=1=1=1=|


 > align-items => 교차축을 기준으로 정렬 : 수직정렬
 - center
 - flex-start
 - flex-end
 - stretch : 자식요소의 높이값을 별도로 지정하지 않는경우, 부모요소의 높이를 자동으로 상속받는 기능


 > flex-direction = > 중심축 / 교차축을 무엇으로 할 것 인가?
(*default => row / column)
>row(왼쪽시작)  // row-revers(오른쪽 시작)
=> 겉으로 얼핏보면 flex-end & row-reverse 가 매우 비슷하게 보이나 엄밀히 다른 기능


>column(상단부터) // (column-reverse(한단부터)
=>겉으로 얼핏보면 flex-end&column-reivr.com

  > flex-wrap => default => no-wrap _ 자식요소의 너비값을 보장X_ 밀고들어감.

 > align-contents => 자식요소들이 여러개의 행으로 구분이 되어졌을 때 
어느 방향으로 모든 자식요소들의 수직정렬을 결정할 것 인가. / 하나의 컨텐츠로 식별 -> 수직 정렬을 주고자 할때
 -center
 -flex-end
 -flex-start
 - space- between ,around, evenly


*flex-wrap & flex-direction 하나로 통합해서 작성!!
> flex-flow 


2) 자식 (*플렉스 레이아웃 시스템 문법 적용)
> flex-grow : 자식요소들의 너비의 비율을 결정.
> flex-shrink : 자식요소들의 너비가 줄어들 때의 비율을 결정
> flex-basis : 자식요소들에게 고정 너비값을 부여!!!  _ 최소한의 너비 값.
=> flex : flex-grow flex-shrink  flex-basis 한번에 가능
        _>flex-grow 필수 값 / flex-shrink flex-basis =>옵션

> order : 자식요소들의 포지션 위치 순서 결정!!!
          &:nth-child(1) {
            background: crimson;
            order: 3;
          }
          &:nth-child(2) {
            background: dodgerblue;
            order: 2;
          }
          &:nth-child(3) {
            background: burlywood;
            order: 1;
          }


3) 중심축 / 교차축
 - 중심축 default => 가로 row
 - 교차축 default => 세로 column
