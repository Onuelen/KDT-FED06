JS_  Map & Set

let myCup = new Map([
  ["color", "white"],
  ["material", "ceramic"],
  ["capacity", "300ml"],
]);

console.log(myCup);

// myCup.set("type", "mini");
// myCup.set("purpose", "daily");

myCup.set("type", "mini").set("purpose", "daily");

console.log(myCup);

// 메서드 체이닝 ! !

console.log(myCup.get("color"));
console.log(myCup.size); // 가지고 있는 개수의 값을 가져옴
console.log(myCup.has("color")); // 키값이 존재한다면 true / 없다면 false를 반환한다.
console.log(myCup.delete("type")); // 특정 키값만 삭제, 제거

// console.log(myCup.clear()); // 모든 값을 삭제, 제거 _ 전체를 지우기에 인자값이 필요하지 않다.
// console.log(myCup);

//   keys , values , entries    반복을 가능하게.

console.log(myCup.keys()); // 키값들만 가져옴. (전부)
console.log(myCup.values()); // 벨류값만 가져옴. (전부)
console.log(myCup.entries()); // 다가져옴

 배열만 반복문?

Iterable (이터러블)
Iterator (이터레이터 객체) => 반복문 사용!!


Set 은 배열의 상위버전 map에서 사용하는 것들 사용가능 (set 제외)

add( )


*----------------------------------------------------------------------------------------------------------------------면접 단골 질문
*Iterable = 순서대로 처리할 수 있는
  Iterable 객체 => 객체 안에 담겨있는 각각의 독립적인 아이템 요소를 찾아서 어떤 실행을 순서대로 처리할 수 있도록 할 수 있는 객체

 JS 안에서 Iterable 객체 -> 배열 & 문자열!!!
 for in문 (*객체)

 * Iterable 객체
  1) for ...of문 반복문
  2) 전개연산자 구문
  3) 구조분해할당

*Iteratror

*generator


	=======================================================


브라우저 창을 기준으로 좌우상하 측면에서 얼만큼 떨어졌는가를 알 수 있게 해주는 속성 : offset
offsetLeft

2. 현재 브라우저 내 X 좌표값을 찾아오도록 해주는 속성 : pageX



































